#include "LoadFile.h"bool strEqual_pred(unsigned char a, unsigned char b){    return std::tolower(a) == std::tolower(b);}bool strEqual(std::string const& a, std::string const& b){    if (a.length() == b.length())        return std::equal(b.begin(), b.end(), a.begin(), strEqual_pred);    else        return false;}int getKeyValue(std::string text, std::string& key, std::string& values){	int posSeparator = text.find(" ");    if (posSeparator != -1) {        key = text.substr(0, posSeparator);        values = text.substr(posSeparator + 1);    } else {		key = text;		values = "";	}    return posSeparator;}void LoadFile(std::string fileName, int& maxLogical){    std::string line, command, values, antennaId, antennaCapacity;    int i = 0, posSeparator = 0;    std::ifstream archivo(fileName.c_str());    while (getline(archivo, line)) {    	posSeparator = getKeyValue(line, command, values);        if (posSeparator != -1) {            if (strEqual(command, "Antena")) {            	posSeparator = getKeyValue(values, antennaId, antennaCapacity);            	std::cout << "AntennaId: " << antennaId << " antennaCapacity: " << antennaCapacity << std::endl;                //TODO: Agregar nueva antena al sistema...            } else if (strEqual(command, "Inicio")) {            	//TODO: Implementar...            } else if (strEqual(command, "Fin")) {            	//TODO: Implementar...            } else if (strEqual(command, "Msg")) {            	//TODO: Implementar...            } else if (strEqual(command, "Conectar")) {            	//TODO: Implementar...            } else if (strEqual(command, "Desconectar")) {            	//TODO: Implementar...            }        }        i++;    }    maxLogical = i;}